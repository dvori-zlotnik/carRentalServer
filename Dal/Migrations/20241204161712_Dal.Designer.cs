// <auto-generated />
using System;
using Dal.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dal.Migrations
{
    [DbContext(typeof(CarRentalContext))]
    [Migration("20241204161712_Dal")]
    partial class Dal
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Dal.Models.Car", b =>
                {
                    b.Property<short>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("code");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Code"));

                    b.Property<bool?>("Available")
                        .HasColumnType("bit")
                        .HasColumnName("available");

                    b.Property<short?>("BalanceInLiters")
                        .HasColumnType("smallint")
                        .HasColumnName("Balance_in_liters");

                    b.Property<short?>("City")
                        .HasColumnType("smallint")
                        .HasColumnName("city");

                    b.Property<short?>("CodeModel")
                        .HasColumnType("smallint")
                        .HasColumnName("code_model");

                    b.Property<short?>("ConsumptionPerKm")
                        .HasColumnType("smallint")
                        .HasColumnName("consumption_per_km");

                    b.Property<bool?>("Gear")
                        .HasColumnType("bit")
                        .HasColumnName("gear");

                    b.Property<string>("Image")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("image");

                    b.Property<string>("LicensePlate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("license_plate");

                    b.Property<short?>("NumberOfSeats")
                        .HasColumnType("smallint")
                        .HasColumnName("number_of_seats");

                    b.Property<short?>("PricePerHour")
                        .HasColumnType("smallint")
                        .HasColumnName("price_per_hour");

                    b.Property<short?>("Year")
                        .HasColumnType("smallint")
                        .HasColumnName("year");

                    b.HasKey("Code")
                        .HasName("PK__cars__357D4CF825B9563A");

                    b.HasIndex("City");

                    b.HasIndex("CodeModel");

                    b.ToTable("cars", (string)null);
                });

            modelBuilder.Entity("Dal.Models.City", b =>
                {
                    b.Property<short>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("code");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Code"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("name");

                    b.HasKey("Code")
                        .HasName("PK__cities__357D4CF8EA54174C");

                    b.HasIndex(new[] { "Name" }, "UQ__cities__72E12F1B5F613DBC")
                        .IsUnique();

                    b.ToTable("cities", (string)null);
                });

            modelBuilder.Entity("Dal.Models.Company", b =>
                {
                    b.Property<short>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("code");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Code"));

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("name");

                    b.HasKey("Code")
                        .HasName("PK__companie__357D4CF8F74A3A71");

                    b.HasIndex(new[] { "Name" }, "UQ__companie__72E12F1BF1CBF38F")
                        .IsUnique();

                    b.ToTable("companies", (string)null);
                });

            modelBuilder.Entity("Dal.Models.DriveType", b =>
                {
                    b.Property<short>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("code");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Code"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("description");

                    b.HasKey("Code")
                        .HasName("PK__drive_ty__357D4CF8BFEFF345");

                    b.HasIndex(new[] { "Description" }, "UQ__drive_ty__489B0D97B128B107")
                        .IsUnique();

                    b.ToTable("drive_type", (string)null);
                });

            modelBuilder.Entity("Dal.Models.Lending", b =>
                {
                    b.Property<short>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("code");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Code"));

                    b.Property<short?>("CodeCar")
                        .HasColumnType("smallint");

                    b.Property<short?>("CodeCarNavigationCode")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<short?>("Hour")
                        .HasColumnType("smallint")
                        .HasColumnName("hour");

                    b.Property<int?>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("id_user");

                    b.HasKey("Code")
                        .HasName("PK__lendings__357D4CF84F2A93EC");

                    b.HasIndex("CodeCarNavigationCode");

                    b.HasIndex("IdUser");

                    b.ToTable("lendings", (string)null);
                });

            modelBuilder.Entity("Dal.Models.Model", b =>
                {
                    b.Property<short>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("code");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Code"));

                    b.Property<short>("CodeCompany")
                        .HasColumnType("smallint")
                        .HasColumnName("code_company");

                    b.Property<short?>("DriveType")
                        .HasColumnType("smallint")
                        .HasColumnName("drive_type");

                    b.Property<string>("Model1")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("model");

                    b.Property<short?>("TypeVehicles")
                        .HasColumnType("smallint")
                        .HasColumnName("type_vehicles");

                    b.HasKey("Code")
                        .HasName("PK__models__357D4CF8AEFD1D17");

                    b.HasIndex("CodeCompany");

                    b.HasIndex("DriveType");

                    b.HasIndex("TypeVehicles");

                    b.ToTable("models", (string)null);
                });

            modelBuilder.Entity("Dal.Models.Restitution", b =>
                {
                    b.Property<short>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("code");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Code"));

                    b.Property<short?>("Balance")
                        .HasColumnType("smallint")
                        .HasColumnName("balance");

                    b.Property<short?>("CodeLending")
                        .HasColumnType("smallint")
                        .HasColumnName("code_lending");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<short?>("Hour")
                        .HasColumnType("smallint")
                        .HasColumnName("hour");

                    b.Property<bool?>("Paid")
                        .HasColumnType("bit")
                        .HasColumnName("paid");

                    b.Property<int?>("TotalPayable")
                        .HasColumnType("int")
                        .HasColumnName("total_payable");

                    b.HasKey("Code")
                        .HasName("PK__restitut__357D4CF802D1B0CC");

                    b.HasIndex("CodeLending");

                    b.ToTable("restitutions", (string)null);
                });

            modelBuilder.Entity("Dal.Models.TypeVehicle", b =>
                {
                    b.Property<short>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("code");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Code"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("description");

                    b.HasKey("Code")
                        .HasName("PK__type_veh__357D4CF845930437");

                    b.HasIndex(new[] { "Description" }, "UQ__type_veh__489B0D9706306BBA")
                        .IsUnique();

                    b.ToTable("type_vehicles", (string)null);
                });

            modelBuilder.Entity("Dal.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Cvv")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("cvv");

                    b.Property<bool?>("IsManager")
                        .HasColumnType("bit")
                        .HasColumnName("is_manager");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("name");

                    b.Property<string>("NumCreditCard")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("num_credit_card");

                    b.Property<string>("Password")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("phone");

                    b.Property<string>("Validity")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("validity");

                    b.HasKey("Id")
                        .HasName("PK__users__3213E83F0718FDE4");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("Dal.Models.Car", b =>
                {
                    b.HasOne("Dal.Models.City", "CityNavigation")
                        .WithMany("Cars")
                        .HasForeignKey("City")
                        .HasConstraintName("FK__cars__city__48CFD27E");

                    b.HasOne("Dal.Models.Model", "CodeModelNavigation")
                        .WithMany("Cars")
                        .HasForeignKey("CodeModel")
                        .HasConstraintName("FK__cars__code_model__47DBAE45");

                    b.Navigation("CityNavigation");

                    b.Navigation("CodeModelNavigation");
                });

            modelBuilder.Entity("Dal.Models.Lending", b =>
                {
                    b.HasOne("Dal.Models.Car", "CodeCarNavigation")
                        .WithMany()
                        .HasForeignKey("CodeCarNavigationCode");

                    b.HasOne("Dal.Models.User", "IdUserNavigation")
                        .WithMany("Lendings")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("FK__lendings__id_use__4D94879B");

                    b.Navigation("CodeCarNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("Dal.Models.Model", b =>
                {
                    b.HasOne("Dal.Models.Company", "CodeCompanyNavigation")
                        .WithMany("Models")
                        .HasForeignKey("CodeCompany")
                        .IsRequired()
                        .HasConstraintName("FK__models__code_com__4316F928");

                    b.HasOne("Dal.Models.DriveType", "DriveTypeNavigation")
                        .WithMany("Models")
                        .HasForeignKey("DriveType")
                        .HasConstraintName("FK__models__drive_ty__440B1D61");

                    b.HasOne("Dal.Models.TypeVehicle", "TypeVehiclesNavigation")
                        .WithMany("Models")
                        .HasForeignKey("TypeVehicles")
                        .HasConstraintName("FK__models__type_veh__44FF419A");

                    b.Navigation("CodeCompanyNavigation");

                    b.Navigation("DriveTypeNavigation");

                    b.Navigation("TypeVehiclesNavigation");
                });

            modelBuilder.Entity("Dal.Models.Restitution", b =>
                {
                    b.HasOne("Dal.Models.Lending", "CodeLendingNavigation")
                        .WithMany("Restitutions")
                        .HasForeignKey("CodeLending")
                        .HasConstraintName("FK__restituti__code___5070F446");

                    b.Navigation("CodeLendingNavigation");
                });

            modelBuilder.Entity("Dal.Models.City", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("Dal.Models.Company", b =>
                {
                    b.Navigation("Models");
                });

            modelBuilder.Entity("Dal.Models.DriveType", b =>
                {
                    b.Navigation("Models");
                });

            modelBuilder.Entity("Dal.Models.Lending", b =>
                {
                    b.Navigation("Restitutions");
                });

            modelBuilder.Entity("Dal.Models.Model", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("Dal.Models.TypeVehicle", b =>
                {
                    b.Navigation("Models");
                });

            modelBuilder.Entity("Dal.Models.User", b =>
                {
                    b.Navigation("Lendings");
                });
#pragma warning restore 612, 618
        }
    }
}
